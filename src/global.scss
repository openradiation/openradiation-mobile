@import '@ionic/angular/css/core.css';
@import '@ionic/angular/css/normalize.css';
@import '@ionic/angular/css/structure.css';
@import '@ionic/angular/css/typography.css';

@import '@ionic/angular/css/padding.css';
@import '@ionic/angular/css/float-elements.css';
@import '@ionic/angular/css/text-alignment.css';
@import '@ionic/angular/css/text-transformation.css';
@import '@ionic/angular/css/flex-utils.css';

@import './theme/variables.scss';

// http://ionicframework.com/docs/theming/

// App Global Sass
// ----------------------------------------------------------------------------
// Put style rules here that you want to apply globally. These styles are for
// the entire app and not just one component. Additionally, this file can be
// also used as an entry point to import other Sass files to be included in the
// output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's default Sass
// variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule for the .md, .ios,
// or .wp mode classes. The mode class is automatically applied to the <body>
// element in the app.
@font-face {
  font-family: 'INTERSTATE';
  src: url('assets/fonts/Interstate_Regular.eot');
  src: local('☺'), url('assets/fonts/Interstate_Regular.woff') format('woff'),
    url('assets/fonts/Interstate_Regular.ttf') format('truetype'),
    url('assets/fonts/Interstate_Regular.svg') format('svg');
  font-weight: normal;
  font-style: normal;
  font-smooth: always;
}

@font-face {
  font-family: 'INTERSTATE';
  src: url('assets/fonts/Interstate_Light.eot');
  src: local('☺'), url('assets/fonts/Interstate_Light.woff') format('woff'),
    url('assets/fonts/Interstate_Light.ttf') format('truetype'), url('assets/fonts/Interstate_Light.svg') format('svg');
  font-weight: 200;
  font-style: normal;
  font-smooth: always;
}

@font-face {
  font-family: 'ARIALROUNDED';
  src: url('assets/fonts/ArialRoundedMTBold.eot');
  src: local('☺'), url('assets/fonts/ArialRoundedMTBold.woff') format('woff'),
    url('assets/fonts/ArialRoundedMTBold.ttf') format('truetype'),
    url('assets/fonts/ArialRoundedMTBold.svg') format('svg');
  font-weight: normal;
  font-style: normal;
  font-smooth: always;
}

ion-app {
  margin-top: var(--safe-area-inset-top);
  margin-bottom: var(--safe-area-inset-bottom);
}

* {
  box-sizing: border-box;
}

ion-content {
  --background: linear-gradient(to bottom, #{$base-color}, #{$third-color});
}

ion-list {
  --ion-item-background: transparent;
}

ion-item {
  --detail-icon-color: rgba(255, 255, 255, 1);
  --detail-icon-opacity: 0.8;
  color: white;
  --ion-font-family: 'INTERSTATE', Arial, Helvetica, sans-serif;
  font-weight: 200;
  --background-activated: transparent;
  --highlight-background: transparent;
  --background: transparent;
  --border-color: transparent;

  &.long-label {
    ion-label {
      white-space: normal;
    }
  }

  &.no-padding {
    --inner-padding-end: 0;
  }

  ion-input {
    color: inherit;
  }
}

ion-button {
  font-family: 'INTERSTATE', Arial, Helvetica, sans-serif;
  font-weight: 200;
  color: white;
}

ion-button.flat-button {
  --background: #{$second-color};
  color: white;
}

ion-button.flat-button-alt {
  --background: #{$base-color};
  color: white;
}

a {
  color: $forth-color !important;
  text-decoration: underline;
}

ion-toggle {
  --background-checked: #{$third-color};
  --handle-background-checked: #{$second-color};
}

ion-spinner {
  color: white;
}

.md .keyboard-open {
  ion-content {
    --keyboard-offset: 250px;
  }
}

.custom-loading-indicator {
  .loading-wrapper {
    background: $base-color;
    color: white;
  }
}

//We need to put measure-report specific css here so that it is not scoped
.content {
  ion-list {
    ion-item {
      --border-color: transparent;
      margin: -5px 0;
      --min-height: 0;
      font-size: 15px;

      &.has-suffix {
        ion-input.input {
          input {
            border-radius: 10px 0 0 10px;
          }
        }
      }

      &.custom-disabled {
        pointer-events: none;

        ion-datetime-button::part(native){
          background: transparent;
          font-weight: 200;
          font-size: 15px;
          border-radius: 10px;
          color: #FFF;
          height: 26px;
          line-height: 26px;
          padding: 0 8px;
          height: 26px;
          line-height: 26px;
          padding: 0 8px;
          width: 100%;
          text-align: right;
          opacity: 1;
          margin: 10px 0;
        }

        ion-input {

          &.input {

            .label-text-wrapper {
              margin-inline-end: 0px;

              .label-text {
                color:$third-color;
                min-width: 165px;
                text-align: left;
              }
            }
          }
        }

        ion-input {

          &.values {

            .label-text-wrapper {
              margin-inline-end: 0px;

              .label-text {
                color:$second-color;
                min-width: 165px;
                text-align: left;
              }
            }
          }
        }

      }

      &:not(.custom-disabled) {

        ion-datetime-button,
        ion-textarea {
          background: $forth-color;
          border-radius: 10px;
          color: $second-color;
        }

        ion-input {

          &.input {
            height: 26px;
            line-height: 26px;
            --padding-bottom: 0;
            --padding-top: 0;
            --padding-start: 0px;
            --padding-end: 8px;
            max-height:26px;
            min-height:26px;
            font-weight: 200;
            margin: 10px 0;

            .input-wrapper {
              padding-inline-end: 0px;
            }

            .label-text-wrapper {
              margin-inline-end: 0px;

              .label-text {
                color:$third-color;
                min-width: 165px;
                text-align: left;
              }
            }
            
            input {
              background: $forth-color;
              border-radius: 10px;
              color: $second-color;
              height: 26px;
              line-height: 26px;
              padding: 0 8px;
              max-height:26px;
              min-height:26px;
              font-weight: 200;
              text-transform:uppercase;
            }

            &.planeMode {

              .label-text {
                color:$second-color;
              }

            }
          }
        }
      }
    }
  }
}